#創建資料庫
CREATE database dinbendon;
USE dinbendon;

#創建會員表
create table member
(
  memberId int auto_increment primary key,
  memberName varchar(20) not null,
  memberPhone varchar(20) not null,
  companyName varchar(20) not null,
  address varchar(50) not null
);

#創建餐廳表
create table restaurant(
    restaurantId int auto_increment not null primary key,
    restaurantName varchar(20) not null,
    restaurantPhone varchar(20) not null,
    restaurantAddress varchar(50) not null
); 

#創建菜單表
create table menu
(
  menuId int auto_increment primary key,
  restaurantId int not null,
  dishName varchar(10) not null,
  price int not null,
  CONSTRAINT fk_restaurantId foreign key (restaurantId) references restaurant (restaurantId)
  ON DELETE CASCADE
  ON UPDATE CASCADE
);

#創建訂單表
create table orders
(
  orderId int auto_increment primary key,
  memberId int,
  menuId int,
  totalPrice int NOT NULL,
  date timestamp,
  CONSTRAINT fk_memberId foreign key (memberId) references member (memberId)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT fk_menuId foreign key (menuId) references menu (menuId)
  ON DELETE CASCADE
  ON UPDATE CASCADE
);


#匯入資料
#會員
insert into member  (memberName, memberPhone, companyName, address) VALUES 
('Alan', '0939-456-789', '中佑集團', '台中市西屯區市政北二路238號'),
('Bill', '0939-789-123', '王品集團', '台中市西區台灣大道二段218號'),
('jessie', '0925-123-456', '喜客來股份有限公司', '台中市西屯區台灣大道三段251號');


#餐廳
insert into restaurant (restaurantName, restaurantPhone, restaurantAddress) VALUES 
('好旺飯包', '台中市龍井區台灣大道五段', '04-2259-4188'),
('周大福鐵路便當', '台中市西屯區西屯路二段', '04-2452-1311'),
('劉江便當', '台中市西屯區福順路', '04-2255-3833'),
('好日子雙主菜便當', '台中市西屯區黎明路二段', '04-2254-6399');

#菜單
insert into menu (restaurantId, dishName, price) VALUES 
(1,'辣子雞肉飯',60),
(1,'咖哩雞肉飯',70),
(1,'滷排骨飯',80),
(2,'軟骨便當',60),
(2,'排骨便當',70),
(2,'鐵路便當',80),
(3,'炸雞腿飯',60),
(3,'炸豬排飯',65),
(3,'排骨飯',70),
(4,'蝦捲鯛魚飯',75),
(4,'雞腿排飯',80),
(4,'沙茶牛肉飯',85);

#訂單
insert into orders (memberId, menuId, totalPrice) VALUES 
(1, 1, 60),
(1, 2, 140),
(1, 3, 160),
(2, 4, 60),
(2, 5, 70),
(2, 6, 80),
(3, 7, 70),
(3, 9, 70),
(3, 10, 150),
(3, 12, 85);


select o.memberId,memberName,orderId,o.menuId,dishName,date
from member m JOIN orders o on o.memberId=m.memberId
	      JOIN menu me on me.menuId = o.menuId
order by orderId asc
